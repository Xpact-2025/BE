name: Build and Deploy Xpact Application (Test)

on:
  push:
    branches:
#      - feature/#12/deploy

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # github workflows로 현재 repository의 코드를 가져옴 (최신 버전 : v4)
      - name: Checkout Code
        uses: actions/checkout@v4

      # java 실행 환경 설정 (Eclipse Temurin에서 jdk17 실행) (최선 버전 : v4)
      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 프로젝트 실행을 위한 환경변수 파일 설정

      # Gradle 빌드 (테스트 실행 x)
      - name: Build With Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      # Dokcer Login
      - name: Docker Login to GHCR
        run: echo ${{ secrets.WONJAE_GITHUB_PAT }} | docker login ghcr.io -u ${{ secrets.WONJAE_GITHUB_USERNAME }} --password-stdin

      # Image build ->  ghcr.io/<OWNER>/<REPO>:<TAG> .
      - name: Build Docker Image
        run: docker build -t ghcr.io/${{ secrets.ORG_NAME }}/xpact-api:latest .

      # docker container push
      - name: Push Docker Images
        run: docker push ghcr.io/${{ secrets.ORG_NAME }}/xpact-api:latest


  transfer:
    runs-on: ubuntu-22.04
    steps:
      - name: Transfer docker-compose.yaml file to ec2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          source: /docker-compose.yaml
          target: /home/ubuntu/

      - name: Transfer nginx.conf file to ec2
        uses: appleboy/scp-action@0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          source: /nginx/nginx.conf
          target: /home/ubuntu/nginx/nginx.conf


  deploy:
    runs-on: ubuntu-22.04
    steps:
      # ec2 접속
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
          # 1. cd ~/xpact-api
            cd ~/xpact-api
                    
          # 2. .env 작성 (~/xpact-api/ 에 저장)
            echo "${{ secrets.ENV }}" > ./xpact-api/.env
                    
          # 3. ghcr에서 image ppull
            docker pull ghcr.io/${{ secrets.ORG_NAME }}/xpact-api:latest
          
          # 4. 컨테이너 중지 (redis 제외)
            docker-compose stop xpact-api
          
          # 5. 컨테이너 재시작
            docker-compose start xpact-api
          
          # 6. 안 쓰는 이미지 삭제
            docker image prune -a -f